    0: [62] <- input         # node number
    2: [10] <- [62] + 11     # jump table
    6: rel +2255             # set up stack
    8: if 1 then goto [0]    
   11: data 2061             # node number-based jump table
   12: data 1550
   13: data 1927
   14: data 1618
   15: data 1090
   16: data 672
   17: data 1649
   18: data 870
   19: data 1783
   20: data 810
   21: data 1818
   22: data 2102
   23: data 2030
   24: data 1253
   25: data 571
   26: data 1154
   27: data 841
   28: data 779
   29: data 1185
   30: data 1412
   31: data 1447
   32: data 2224
   33: data 907
   34: data 1016
   35: data 602
   36: data 936
   37: data 1519
   38: data 1284
   39: data 1121
   40: data 1581
   41: data 1055
   42: data 2193
   43: data 1686
   44: data 1348
   45: data 707
   46: data 1752
   47: data 1482
   48: data 1317
   49: data 1958
   50: data 969
   51: data 746
   52: data 1379
   53: data 1999
   54: data 2162
   55: data 1851
   56: data 1886
   57: data 2131
   58: data 637
   59: data 1220
   60: data 1717
   61: data 0
   62: data 0
   63: data 0
   64: data 0
   65: data 0
   66: data 0
   67: data 0
   68: data 0
   69: data 0
   70: data 0
   71: data 0
   72: data 0
   73: [64] <- input
   75: [62] <- ([64] == -1)
   79: if not [62] then goto 88
   82: if not [61] then goto 170
   85: if not 0 then goto 73
   88: [65] <- input
   90: [rel+1] <- 1 * [64]
   94: [rel+2] <- [66] * 1
   98: [rel+0] <- 105 * 1
  102: if not 0 then goto 436
  105: [64] <- [rel+1] + -1
  109: [62] <- ([64] < 0)
  113: if [62] then goto 73
  116: [62] <- ([64] < [67])
  120: if not [62] then goto 73
  123: [132] <- [64] * 2
  127: [132] <- [132] + [68]
  131: [62] <- [0] + 0
  135: [140] <- [132] + 1
  139: [63] <- ([0] == [65])
  143: [62] <- [63] * [62]
  147: if [62] then goto 73
  150: [161] <- [64] * 2
  154: [161] <- [161] + [68]
  158: [0] <- 1 + 0
  162: [169] <- [161] + 1
  166: [0] <- [65] + 0
  170: [61] <- 0 + 1
  174: [63] <- 0 * 1
  178: [62] <- ([63] < [67])
  182: if not [62] then goto 203
  185: [194] <- [63] * 2
  189: [194] <- [68] + [194]
  193: if not [0] then goto 73
  196: [63] <- [63] + 1
  200: if not 0 then goto 178
  203: [rel+0] <- 210 + 0
  207: if not 0 then goto [69]
  210: [70] <- 1 * [rel+1]
  214: [63] <- 0 * 1
  218: [62] <- ([63] < [71])
  222: if not [62] then goto 250
  225: [234] <- [63] * 2
  229: [234] <- [72] + [234]
  233: output [0]
  235: [240] <- 1 + [234]
  239: output [0]
  241: output [70]
  243: [63] <- [63] + 1
  247: if 1 then goto 218
  250: if not 0 then goto 73
  253: rel +4                       # --> returns sum of all ndata1 "y" values
  255: [rel-3] <- 1 * 0
  259: [rel-2] <- 0 * 1
  263: [rel-1] <- ([rel-2] < [67])
  267: if not [rel-1] then goto 293
  270: [283] <- [rel-2] * 2
  274: [283] <- 1 + [283]
  278: [283] <- [68] + [283]
  282: [rel-3] <- [0] + [rel-3]
  286: [rel-2] <- [rel-2] + 1
  290: if not 0 then goto 263
  293: [rel-3] <- [rel-3] * 1
  297: rel -4
  299: if 1 then goto [rel+0]
  302: rel +4                       # --> returns product of all ndata1 "y" values
  304: [rel-3] <- 1 * 1             # loc1 = 1
  308: [rel-2] <- 0 + 0             # loc2 = 0
  312: [rel-1] <- ([rel-2] < [67])  # 
  316: if not [rel-1] then goto 342 # while loc2 < [67]:
  319: [332] <- [rel-2] * 2         #    idx = loc2 * 2
  323: [332] <- 1 + [332]           #    idx += 1
  327: [332] <- [68] + [332]        #
  331: [rel-3] <- [0] * [rel-3]     #    loc1 *= ndata1[idx]
  335: [rel-2] <- [rel-2] + 1       #    loc2 += 1
  339: if not 0 then goto 312       #
  342: [rel-3] <- [rel-3] * 1       # return loc1
  346: rel -4
  348: if 1 then goto [rel+0]
  351: rel +1                        # ---> returns ndata1[0].y // ndata1[1].y
  353: [359] <- 1 + [68]             #
  357: [rel+1] <- 0 + [0]
  361: [366] <- 3 + [68]
  365: [rel+2] <- [0] + 0
  369: [rel+0] <- 376 + 0
  373: if not 0 then goto 436
  376: [rel+0] <- [rel+1] * 1
  380: rel -1
  382: if 1 then goto [rel+0]
  385: data 1
  386: data 2
  387: data 4
  388: data 8
  389: data 16
  390: data 32
  391: data 64
  392: data 128
  393: data 256
  394: data 512
  395: data 1024
  396: data 2048
  397: data 4096
  398: data 8192
  399: data 16384
  400: data 32768
  401: data 65536
  402: data 131072
  403: data 262144
  404: data 524288
  405: data 1048576
  406: data 2097152
  407: data 4194304
  408: data 8388608
  409: data 16777216
  410: data 33554432
  411: data 67108864
  412: data 134217728
  413: data 268435456
  414: data 536870912
  415: data 1073741824
  416: data 2147483648
  417: data 4294967296
  418: data 8589934592
  419: data 17179869184
  420: data 34359738368
  421: data 68719476736
  422: data 137438953472
  423: data 274877906944
  424: data 549755813888
  425: data 1099511627776
  426: data 2199023255552
  427: data 4398046511104
  428: data 8796093022208
  429: data 17592186044416
  430: data 35184372088832
  431: data 70368744177664
  432: data 140737488355328
  433: data 281474976710656
  434: data 562949953421312
  435: data 1125899906842624
  436: rel +8                           # two params @ rel-7, rel-6. RetAddr @ rel-8
  438: [rel-5] <- [rel-6] * 10          #  ---> computes p1 // p2 if both p1, p2 > 0
  442: [rel-5] <- ([rel-7] < [rel-5])   #
  446: if [rel-5] then goto 521         # if (p1 >= 10*p2):
  449: [rel-4] <- 0 + 0                 #    loc2 = 0
  453: [rel-3] <- 0 + 0                 #    loc3 = 0
  457: [rel-2] <- 51 + 0                #    loc4 = 51
  461: [rel-2] <- [rel-2] + -1          #    while loc4:
  465: [470] <- [rel-2] + 385           #           loc4 -= 1
  469: [rel-1] <- [0] + 0               #           loc5 = 2 ** loc4
  473: [rel-3] <- [rel-3] * 2           #           loc3 *= 2
  477: [rel-5] <- ([rel-7] < [rel-1])   #
  481: if [rel-5] then goto 496         #           if (p1 >= loc5):
  484: [rel-3] <- [rel-3] + 1           #               loc3 += 1
  488: [rel-5] <- -1 * [rel-1]          #
  492: [rel-7] <- [rel-7] + [rel-5]     #               p1 -= loc5
  496: [rel-5] <- ([rel-3] < [rel-6])   #
  500: if [rel-5] then goto 515         #           if (loc3 >= p2):
  503: [rel-5] <- -1 * [rel-6]          #
  507: [rel-3] <- [rel-3] + [rel-5]     #               loc3 -= p2
  511: [rel-4] <- [rel-1] + [rel-4]     #               loc2 += loc5
  515: if [rel-2] then goto 461         #
  518: if not 0 then goto 547           # else:
  521: [rel-4] <- -1 + 0                #    loc2 = -1
  525: [rel-6] <- [rel-6] * -1          #    p2 = -p2
  529: [rel-5] <- ([rel-7] < 0)         #    
  533: if [rel-5] then goto 547         #    while not (p1 < 0):
  536: [rel-7] <- [rel-7] + [rel-6]     #        p1 += p2
  540: [rel-4] <- [rel-4] + 1           #        loc2 += 1
  544: if not 0 then goto 529           #
  547: [rel-7] <- 1 * [rel-4]           # return loc2
  551: rel -8                           #
  553: if 1 then goto [rel+0]
  556: rel +1                           # --> returns ndata1[1]
  558: [563] <- 1 + [68]
  562: [rel+0] <- [0] * 1
  566: rel -1
  568: if 1 then goto [rel+0]
  571: [66] <- 0 + 81181          # beginning of per-node init routines
  575: [67] <- 1 + 0
  579: [68] <- 598 * 1
  583: [69] <- 0 + 556
  587: [71] <- 1 * 1
  591: [72] <- 600 * 1
  595: if 1 then goto 73
  598: data 1
  599: data -153
  600: data 49
  601: data 88318
  602: [66] <- 1 * 43591          # [66] gets some five-or-six-digit prime
  606: [67] <- 1 + 0              # [67] gets ndata1 length in pairs of values
  610: [68] <- 629 + 0            # [68] gets first post-node data area (ndata1)
  614: [69] <- 0 + 556            # [69] gets a function address (nfunc)
  618: [71] <- 3 + 0              # [71] gets ndata2 length in pairs of values
  622: [72] <- 0 + 631            # [72] gets second post-node data area (ndata2)
  626: if 1 then goto 73
  629: data 1
  630: data 2
  631: data 23
  632: data 122289
  633: data 38
  634: data 107907
  635: data 38
  636: data 215814
  637: [66] <- 39679 * 1
  641: [67] <- 0 + 3
  645: [68] <- 1 * 664
  649: [69] <- 0 + 302
  653: [71] <- 1 + 0
  657: [72] <- 1 * 670
  661: if 1 then goto 73
  664: data 0
  665: data 0
  666: data 0
  667: data 0
  668: data 0
  669: data 0
  670: data 7
  671: data 38518
  672: [66] <- 0 + 102077
  676: [67] <- 1 * 1
  680: [68] <- 699 + 0
  684: [69] <- 556 + 0
  688: [71] <- 3 + 0
  692: [72] <- 701 + 0
  696: if 1 then goto 73
  699: data 1
  700: data 5
  701: data 29
  702: data 33457
  703: data 29
  704: data 66914
  705: data 38
  706: data 179845
  707: [66] <- 71993 + 0
  711: [67] <- 5 + 0
  715: [68] <- 734 * 1
  719: [69] <- 253 * 1
  723: [71] <- 0 + 1
  727: [72] <- 744 + 0
  731: if not 0 then goto 73
  734: data 0
  735: data 0
  736: data 0
  737: data 0
  738: data 0
  739: data 0
  740: data 0
  741: data 0
  742: data 0
  743: data 0
  744: data 20
  745: data 116758
  746: [66] <- 0 + 83561
  750: [67] <- 1 * 2
  754: [68] <- 0 + 773
  758: [69] <- 302 * 1
  762: [71] <- 1 * 1
  766: [72] <- 0 + 777
  770: if 1 then goto 73
  773: data 0
  774: data 0
  775: data 0
  776: data 0
  777: data 45
  778: data 141402
  779: [66] <- 51481 + 0
  783: [67] <- 1 * 1
  787: [68] <- 1 * 806
  791: [69] <- 1 * 556
  795: [71] <- 1 * 1
  799: [72] <- 808 * 1
  803: if not 0 then goto 73
  806: data 1
  807: data 160
  808: data 38
  809: data 35969
  810: [66] <- 0 + 35999
  814: [67] <- 0 + 1
  818: [68] <- 837 * 1
  822: [69] <- 556 + 0
  826: [71] <- 1 * 1
  830: [72] <- 839 * 1
  834: if 1 then goto 73
  837: data 1
  838: data 571
  839: data 6
  840: data 17551
  841: [66] <- 18773 * 1
  845: [67] <- 1 * 1
  849: [68] <- 0 + 868
  853: [69] <- 0 + 556
  857: [71] <- 0 + 0
  861: [72] <- 0 + 870
  865: if 1 then goto 73
  868: data 1
  869: data 1631
  870: [66] <- 1 * 19259
  874: [67] <- 1 * 4
  878: [68] <- 897 + 0
  882: [69] <- 1 * 253
  886: [71] <- 1 * 1
  890: [72] <- 905 + 0
  894: if 1 then goto 73
  897: data 0
  898: data 0
  899: data 0
  900: data 0
  901: data 0
  902: data 0
  903: data 0
  904: data 0
  905: data 41
  906: data 54877
  907: [66] <- 83777 + 0
  911: [67] <- 0 + 1
  915: [68] <- 934 + 0
  919: [69] <- 556 + 0
  923: [71] <- 0 + 0
  927: [72] <- 0 + 936
  931: if 1 then goto 73
  934: data 1
  935: data 1967
  936: [66] <- 12071 + 0
  940: [67] <- 0 + 2
  944: [68] <- 963 * 1
  948: [69] <- 1 * 302
  952: [71] <- 1 * 1
  956: [72] <- 967 * 1
  960: if 1 then goto 73
  963: data 0
  964: data 0
  965: data 0
  966: data 0
  967: data 7
  968: data 19259
  969: [66] <- 0 + 23687
  973: [67] <- 1 + 0
  977: [68] <- 996 * 1
  981: [69] <- 556 + 0
  985: [71] <- 9 + 0
  989: [72] <- 998 * 1
  993: if 1 then goto 73
  996: data 1
  997: data 1
  998: data 48
  999: data 26783
 1000: data 27
 1001: data 181994
 1002: data 28
 1003: data 21722
 1004: data 40
 1005: data 83561
 1006: data 19
 1007: data 157161
 1008: data 18
 1009: data 118318
 1010: data 6
 1011: data 52653
 1012: data 23
 1013: data 40763
 1014: data 36
 1015: data 168807
 1016: [66] <- 1 * 40763
 1020: [67] <- 5 * 1
 1024: [68] <- 0 + 1043
 1028: [69] <- 302 * 1
 1032: [71] <- 1 + 0
 1036: [72] <- 0 + 1053
 1040: if not 0 then goto 73
 1043: data 0
 1044: data 0
 1045: data 0
 1046: data 0
 1047: data 0
 1048: data 0
 1049: data 0
 1050: data 0
 1051: data 0
 1052: data 0
 1053: data 34
 1054: data 143986
 1055: [66] <- 1 * 1063
 1059: [67] <- 0 + 3
 1063: [68] <- 1 * 1082
 1067: [69] <- 302 + 0
 1071: [71] <- 1 + 0
 1075: [72] <- 1088 * 1
 1079: if 1 then goto 73
 1082: data 0
 1083: data 0
 1084: data 0
 1085: data 0
 1086: data 0
 1087: data 0
 1088: data 7
 1089: data 57777
 1090: [66] <- 1 * 29789
 1094: [67] <- 0 + 1
 1098: [68] <- 0 + 1117
 1102: [69] <- 556 + 0
 1106: [71] <- 1 * 1
 1110: [72] <- 1119 * 1
 1114: if 1 then goto 73
 1117: data 1
 1118: data 463
 1119: data 23
 1120: data 203815
 1121: [66] <- 10861 * 1
 1125: [67] <- 2 + 0
 1129: [68] <- 1 * 1148
 1133: [69] <- 302 + 0
 1137: [71] <- 0 + 1
 1141: [72] <- 1152 * 1
 1145: if not 0 then goto 73
 1148: data 0
 1149: data 0
 1150: data 0
 1151: data 0
 1152: data 40
 1153: data 167122
 1154: [66] <- 0 + 2689
 1158: [67] <- 0 + 1
 1162: [68] <- 1181 + 0
 1166: [69] <- 0 + 556
 1170: [71] <- 1 * 1
 1174: [72] <- 0 + 1183
 1178: if 1 then goto 73
 1181: data 1
 1182: data 47
 1183: data 45
 1184: data 47134
 1185: [66] <- 59159 * 1
 1189: [67] <- 3 + 0
 1193: [68] <- 1212 + 0
 1197: [69] <- 0 + 302
 1201: [71] <- 1 * 1
 1205: [72] <- 1218 + 0
 1209: if not 0 then goto 73
 1212: data 0
 1213: data 0
 1214: data 0
 1215: data 0
 1216: data 0
 1217: data 0
 1218: data 34
 1219: data 71993
 1220: [66] <- 1 * 26783
 1224: [67] <- 1 * 2
 1228: [68] <- 1247 + 0
 1232: [69] <- 302 * 1
 1236: [71] <- 0 + 1
 1240: [72] <- 0 + 1251
 1244: if not 0 then goto 73
 1247: data 0
 1248: data 0
 1249: data 0
 1250: data 0
 1251: data 27
 1252: data 90997
 1253: [66] <- 0 + 91369
 1257: [67] <- 1 + 0
 1261: [68] <- 1 * 1280
 1265: [69] <- 0 + 556
 1269: [71] <- 1 * 1
 1273: [72] <- 1282 * 1
 1277: if 1 then goto 73
 1280: data 1
 1281: data 1346
 1282: data 6
 1283: data 35102
 1284: [66] <- 90997 * 1
 1288: [67] <- 2 * 1
 1292: [68] <- 1311 + 0
 1296: [69] <- 0 + 302
 1300: [71] <- 0 + 1
 1304: [72] <- 1315 * 1
 1308: if not 0 then goto 73
 1311: data 0
 1312: data 0
 1313: data 0
 1314: data 0
 1315: data 28
 1316: data 10861
 1317: [66] <- 20479 * 1
 1321: [67] <- 1 * 1
 1325: [68] <- 1 * 1344
 1329: [69] <- 556 + 0
 1333: [71] <- 1 * 1
 1337: [72] <- 1346 * 1
 1341: if 1 then goto 73
 1344: data 1
 1345: data 113
 1346: data 23
 1347: data 163052
 1348: [66] <- 1 * 40361
 1352: [67] <- 1 * 1
 1356: [68] <- 1375 + 0
 1360: [69] <- 1 * 556
 1364: [71] <- 1 * 1
 1368: [72] <- 1 * 1377
 1372: if 1 then goto 73
 1375: data 1
 1376: data 17
 1377: data 45
 1378: data 23567
 1379: [66] <- 54877 * 1
 1383: [67] <- 2 + 0
 1387: [68] <- 1406 * 1
 1391: [69] <- 0 + 351
 1395: [71] <- 1 * 1
 1399: [72] <- 1410 + 0
 1403: if 1 then goto 73
 1406: data 0
 1407: data 0
 1408: data 0
 1409: data 0
 1410: data 255
 1411: data 42859
 1412: [66] <- 1 * 52387
 1416: [67] <- 1 * 3
 1420: [68] <- 1439 + 0
 1424: [69] <- 302 * 1
 1428: [71] <- 1 * 1
 1432: [72] <- 0 + 1445
 1436: if 1 then goto 73
 1439: data 0
 1440: data 0
 1441: data 0
 1442: data 0
 1443: data 0
 1444: data 0
 1445: data 34
 1446: data 359965
 1447: [66] <- 1 * 58379
 1451: [67] <- 0 + 3
 1455: [68] <- 0 + 1474
 1459: [69] <- 302 * 1
 1463: [71] <- 1 * 1
 1467: [72] <- 1 * 1480
 1471: if 1 then goto 73
 1474: data 0
 1475: data 0
 1476: data 0
 1477: data 0
 1478: data 0
 1479: data 0
 1480: data 25
 1481: data 24142
 1482: [66] <- 56269 * 1
 1486: [67] <- 4 + 0
 1490: [68] <- 0 + 1509
 1494: [69] <- 1 * 302
 1498: [71] <- 0 + 1
 1502: [72] <- 1517 + 0
 1506: if 1 then goto 73
 1509: data 0
 1510: data 0
 1511: data 0
 1512: data 0
 1513: data 0
 1514: data 0
 1515: data 0
 1516: data 0
 1517: data 34
 1518: data 215979
 1519: [66] <- 99469 * 1
 1523: [67] <- 0 + 1
 1527: [68] <- 0 + 1546
 1531: [69] <- 0 + 556
 1535: [71] <- 1 * 1
 1539: [72] <- 1548 * 1
 1543: if not 0 then goto 73
 1546: data 1
 1547: data 147
 1548: data 45
 1549: data 117835
 1550: [66] <- 94583 * 1
 1554: [67] <- 0 + 1
 1558: [68] <- 1577 * 1
 1562: [69] <- 556 * 1
 1566: [71] <- 1 * 1
 1570: [72] <- 1 * 1579
 1574: if not 0 then goto 73
 1577: data 1
 1578: data -42589
 1579: data 48
 1580: data 53566
 1581: [66] <- 0 + 33457
 1585: [67] <- 4 * 1
 1589: [68] <- 1 * 1608
 1593: [69] <- 1 * 302
 1597: [71] <- 1 + 0
 1601: [72] <- 0 + 1616
 1605: if 1 then goto 73
 1608: data 0
 1609: data 0
 1610: data 0
 1611: data 0
 1612: data 0
 1613: data 0
 1614: data 0
 1615: data 0
 1616: data 38
 1617: data 71938
 1618: [66] <- 0 + 22171
 1622: [67] <- 1 + 0
 1626: [68] <- 1 * 1645
 1630: [69] <- 556 + 0
 1634: [71] <- 1 + 0
 1638: [72] <- 0 + 1647
 1642: if 1 then goto 73
 1645: data 1
 1646: data 1483
 1647: data 18
 1648: data 177477
 1649: [66] <- 0 + 17551
 1653: [67] <- 4 + 0
 1657: [68] <- 1676 * 1
 1661: [69] <- 0 + 302
 1665: [71] <- 1 * 1
 1669: [72] <- 1 * 1684
 1673: if 1 then goto 73
 1676: data 0
 1677: data 0
 1678: data 0
 1679: data 0
 1680: data 0
 1681: data 0
 1682: data 0
 1683: data 0
 1684: data 34
 1685: data 287972
 1686: [66] <- 499 * 1
 1690: [67] <- 1 + 0
 1694: [68] <- 1713 + 0
 1698: [69] <- 0 + 556
 1702: [71] <- 0 + 1
 1706: [72] <- 1 * 1715
 1710: if not 0 then goto 73
 1713: data 1
 1714: data -281
 1715: data 18
 1716: data 59159
 1717: [66] <- 44159 * 1
 1721: [67] <- 1 * 3
 1725: [68] <- 1744 + 0
 1729: [69] <- 0 + 302
 1733: [71] <- 0 + 1
 1737: [72] <- 1750 * 1
 1741: if 1 then goto 73
 1744: data 0
 1745: data 0
 1746: data 0
 1747: data 0
 1748: data 0
 1749: data 0
 1750: data 47
 1751: data 79358
 1752: [66] <- 1 * 37781
 1756: [67] <- 1 + 0
 1760: [68] <- 1 * 1779
 1764: [69] <- 556 * 1
 1768: [71] <- 1 + 0
 1772: [72] <- 0 + 1781
 1776: if 1 then goto 73
 1779: data 1
 1780: data 67
 1781: data 36
 1782: data 225076
 1783: [66] <- 0 + 66683
 1787: [67] <- 1 * 1
 1791: [68] <- 0 + 1810
 1795: [69] <- 0 + 556
 1799: [71] <- 3 + 0
 1803: [72] <- 1812 * 1
 1807: if not 0 then goto 73
 1810: data 1
 1811: data 3
 1812: data 45
 1813: data 94268
 1814: data 6
 1815: data 70204
 1816: data 23
 1817: data 81526
 1818: [66] <- 39461 + 0
 1822: [67] <- 1 * 1
 1826: [68] <- 1845 * 1
 1830: [69] <- 0 + 556
 1834: [71] <- 2 + 0
 1838: [72] <- 1847 + 0
 1842: if not 0 then goto 73
 1845: data 1
 1846: data 10
 1847: data 29
 1848: data 100371
 1849: data 38
 1850: data 143876
 1851: [66] <- 88289 + 0
 1855: [67] <- 0 + 1
 1859: [68] <- 1 * 1878
 1863: [69] <- 1 * 556
 1867: [71] <- 1 * 3
 1871: [72] <- 1880 * 1
 1875: if not 0 then goto 73
 1878: data 1
 1879: data 7
 1880: data 45
 1881: data 70701
 1882: data 20
 1883: data 58379
 1884: data 49
 1885: data 132477
 1886: [66] <- 0 + 23567
 1890: [67] <- 6 + 0
 1894: [68] <- 1913 + 0
 1898: [69] <- 0 + 302
 1902: [71] <- 1 * 1
 1906: [72] <- 1925 + 0
 1910: if not 0 then goto 73
 1913: data 0
 1914: data 0
 1915: data 0
 1916: data 0
 1917: data 0
 1918: data 0
 1919: data 0
 1920: data 0
 1921: data 0
 1922: data 0
 1923: data 0
 1924: data 0
 1925: data 7
 1926: data 77036
 1927: [66] <- 0 + 1471
 1931: [67] <- 0 + 1
 1935: [68] <- 0 + 1954
 1939: [69] <- 1 * 556
 1943: [71] <- 0 + 1
 1947: [72] <- 1 * 1956
 1951: if 1 then goto 73
 1954: data 1
 1955: data 101
 1956: data 36
 1957: data 56269
 1958: [66] <- 0 + 35969
 1962: [67] <- 6 + 0
 1966: [68] <- 1985 * 1
 1970: [69] <- 302 + 0
 1974: [71] <- 1 + 0
 1978: [72] <- 1997 + 0
 1982: if not 0 then goto 73
 1985: data 0
 1986: data 0
 1987: data 0
 1988: data 0
 1989: data 0
 1990: data 0
 1991: data 0
 1992: data 0
 1993: data 0
 1994: data 0
 1995: data 0
 1996: data 0
 1997: data 41
 1998: data 109754
 1999: [66] <- 0 + 17299
 2003: [67] <- 0 + 1
 2007: [68] <- 1 * 2026
 2011: [69] <- 1 * 556
 2015: [71] <- 1 + 0
 2019: [72] <- 1 * 2028
 2023: if not 0 then goto 73
 2026: data 1
 2027: data -360
 2028: data 19
 2029: data 104774
 2030: [66] <- 28351 * 1
 2034: [67] <- 0 + 1
 2038: [68] <- 1 * 2057
 2042: [69] <- 0 + 556
 2046: [71] <- 1 + 0
 2050: [72] <- 2059 + 0
 2054: if not 0 then goto 73
 2057: data 1
 2058: data 1086
 2059: data 36
 2060: data 112538
 2061: [66] <- 42859 * 1
 2065: [67] <- 0 + 1
 2069: [68] <- 2088 + 0
 2073: [69] <- 556 * 1
 2077: [71] <- 6 + 0
 2081: [72] <- 1 * 2090
 2085: if 1 then goto 73
 2088: data 1
 2089: data 25110
 2090: data 25
 2091: data 12071
 2092: data 47
 2093: data 39679
 2094: data 47
 2095: data 119037
 2096: data 30
 2097: data 1063
 2098: data 30
 2099: data 2126
 2100: data 30
 2101: data 3189
 2102: [66] <- 1 * 84481
 2106: [67] <- 0 + 1
 2110: [68] <- 2129 * 1
 2114: [69] <- 556 * 1
 2118: [71] <- 0 + 0
 2122: [72] <- 2131 + 0
 2126: if 1 then goto 73
 2129: data 1
 2130: data 1635
 2131: [66] <- 92357 * 1
 2135: [67] <- 1 + 0
 2139: [68] <- 2158 + 0
 2143: [69] <- 1 * 556
 2147: [71] <- 1 * 1
 2151: [72] <- 2160 * 1
 2155: if not 0 then goto 73
 2158: data 1
 2159: data 49
 2160: data 49
 2161: data 44159
 2162: [66] <- 0 + 39367
 2166: [67] <- 1 + 0
 2170: [68] <- 0 + 2189
 2174: [69] <- 1 * 556
 2178: [71] <- 1 * 1
 2182: [72] <- 2191 + 0
 2186: if 1 then goto 73
 2189: data 1
 2190: data 5821
 2191: data 19
 2192: data 52387
 2193: [66] <- 0 + 13381
 2197: [67] <- 1 + 0
 2201: [68] <- 2220 + 0
 2205: [69] <- 556 + 0
 2209: [71] <- 1 * 1
 2213: [72] <- 0 + 2222
 2217: if not 0 then goto 73
 2220: data 1
 2221: data 31
 2222: data 20
 2223: data 175137
 2224: [66] <- 90971 + 0
 2228: [67] <- 1 + 0
 2232: [68] <- 0 + 2251
 2236: [69] <- 0 + 556
 2240: [71] <- 1 * 1
 2244: [72] <- 2253 + 0
 2248: if 1 then goto 73
 2251: data 1
 2252: data 125
 2253: data 29
 2254: data 133828
